#predicting using the model
predictions_3months <- predict(est.pnbd.train, prediction.end= "2011-12-07")
predictions_3months
set.seed(1000)
#filtering for transcations made before March.
retail_train_3 <- retail_filtered %>%
filter(InvoiceDate < "2011-03-01")
#creating the data object
clv.train <- clvdata(data.transactions = retail_train_3,
date.format = "ymd",
time.unit = "week",
name.id = "CustomerID",
name.date = "InvoiceDate",
name.price = "sales")
#fitting a pnbd model
est.pnbd.train <- pnbd(clv.data = clv.train)
#predicting using the model
predictions_3months <- predict(est.pnbd.train, prediction.end= "2011-12-07")
predictions_3months
retail_train_3 %>%
filter(is.na(Customer_ID))
retail_train_3 %>%
filter(is.na(CustomerID))
retail_train_3
colnames(retail_train_3)[c(4,6)]
colnames(retail_train_3)[c(4,6)] <- c("date","cust")
retail_train_3
library(BTYDplus)
customer_rdf_3 = BTYDplus::elog2cbs(retail_train_3,
unit = 'days',
T.cal = max(rretail_train_3$date),
T.tot = max(retail_train_3$date))
customer_rdf_3 = BTYDplus::elog2cbs(retail_train_3,
unit = 'days',
T.cal = max(retail_train_3$date),
T.tot = max(retail_train_3$date))
customer_rdf_3
customer_rdf_3$sales_avg = customer_rdf_3$sales / (customer_rdf$x + 1)
customer_rdf_3$sales_avg = customer_rdf_3$sales / (customer_rdf_3$x + 1)
bgnbd_rdf = customer_rdf
bgnbd_rdf = customer_rdf_3
bgnbd_rdf$T.star = 365
bgnbd_rdf$T.star = 273
params_bgnbd = BTYD::bgnbd.EstimateParameters(bgnbd_rdf)
bgnbd_rdf$predicted_bgnbd = BTYD::bgnbd.ConditionalExpectedTransactions(
params = params_bgnbd,
T.star = bgnbd_rdf$T.star,
x = bgnbd_rdf$x,
t.x = bgnbd_rdf$t.x,
T.cal = bgnbd_rdf$T.cal
)
bgnbd_rdf$predicted_bgnbd
bgnbd_rdf$predicted_clv = bgnbd_rdf$sales_avg * bgnbd_rdf$predicted_bgnbd
bgnbd_rdf
predictions_comparison <- bgnbd_rdf %>%
select(predicted_clv, cust)
predictions_comparison
colnames(predictions_comparison)[2] <- "CustomerID"
predictions_comparison$CustomerID <- as.double(predictions_comparison$CustomerID)
customers_3months <- retail_train_3 %>%
distinct(CustomerID)
retail_train_3
colnames(predictions_comparison)[2] <- "cust"
predictions_comparison$CustomerID <- as.double(predictions_comparison$CustomerID)
predictions_comparison
predictions_comparison$cust <- as.double(predictions_comparison$cust)
customers_3months <- retail_train_3 %>%
distinct(cust)
predicted_vs_actual <- customer_clv %>%
filter(cust %in% customers_3months$cust) %>%
left_join(predictions_comparison, by = "cust") %>%
mutate(difference = CLV - predicted_clv)
customers_3months
predicted_vs_actual
customer_clv %>%
filter(cust %in% customers_3months$cust) %>%
left_join(predictions_comparison, by = "cust") %>%
mutate(difference = CLV - predicted_clv)
customer_clv
customer_clv %>%
filter(CustomerID %in% customers_3months$cust)
predictions_comparison,
customer_clv %>%
filter(CustomerID %in% customers_3months$cust) %>%
left_join(predictions_comparison, by = "cust") %>%
mutate(difference = CLV - predicted_clv)
predictions_comparison
customers_3months
predictions_comparison <- bgnbd_rdf %>%
select(predicted_clv, cust)
colnames(predictions_comparison)[2] <- "CustomerID"
predictions_comparison$CustomerID <- as.double(predictions_comparison$CustomerID)
customers_3months <- retail_train_3 %>%
distinct(CustomerID)
retail_train_3
colnames(retail_train_3)[6] <- "CustomerID"
customers_3months <- retail_train_3 %>%
distinct(CustomerID)
predicted_vs_actual <- customer_clv %>%
filter(CustomerID %in% customers_3months$CustomerID) %>%
left_join(predictions_comparison, by = "CustomerID") %>%
mutate(difference = CLV - predicted_clv)
predicted_vs_actual
predicted_vs_actual %>%
summarise(mean(abs(difference)))
predicted_vs_actual %>%
ggplot(aes(difference)) +
geom_histogram() +
scale_x_log10()
retail_filtered
retail_train_3 %>%
filter(sales < 0)
predictions_comparison <- bgnbd_rdf %>%
select(predicted_clv, cust)
colnames(retail_train_3)[6] <- "CustomerID"
customers_3months <- retail_train_3 %>%
distinct(CustomerID)
predicted_vs_actual <- customer_clv %>%
filter(CustomerID %in% customers_3months$CustomerID) %>%
left_join(predictions_comparison, by = "CustomerID") %>%
mutate(difference = CLV - predicted_clv)
predictions_comparison <- bgnbd_rdf %>%
select(predicted_clv, cust)
colnames(predictions_comparison)[2] <- "CustomerID"
predictions_comparison$CustomerID <- as.double(predictions_comparison$CustomerID)
colnames(retail_train_3)[6] <- "CustomerID"
customers_3months <- retail_train_3 %>%
distinct(CustomerID)
predicted_vs_actual <- customer_clv %>%
filter(CustomerID %in% customers_3months$CustomerID) %>%
left_join(predictions_comparison, by = "CustomerID") %>%
mutate(difference = CLV - predicted_clv)
predicted_vs_actual %>%
summarise(mean(abs(difference)))
predicted_vs_actual %>%
ggplot(aes(difference)) +
geom_histogram() +
scale_x_log10()
predicted_vs_actual %>%
summarise(mean(abs(difference)))
predicted_vs_actual
predicted_vs_actual %>%
filter(CLV == 0)
#getting rid of all the invoice numbers that ended in a return
retail_filtered <- retail_filtered %>%
filter(InvoiceNo %notin% negative_sales$InvoiceNo, CustomerID == 12346)
# Chunk 1
library(tidyverse)
library(CLVTools)
library(tidymodels)
retail <- read_csv("retail_cleaned.csv")
rfm_scores <- read_csv("rfm_scores.csv")
#joining rfm scores with retail data
rfm_join <- rfm_scores %>%
select(value, CustomerID)
retail_filtered <- retail %>%
filter(!is.na(CustomerID)) %>%
left_join(rfm_join, by = "CustomerID") %>%
select(-X1)
# Chunk 2
#calculating CLV of customers
customer_clv <- retail_filtered %>%
group_by(CustomerID) %>%
summarise(CLV = sum(sales))
# Chunk 3
negative_sales <- retail_filtered %>%
filter(sales < 0) %>%
select(InvoiceNo)
`%notin%` <- Negate(`%in%`)
#getting rid of all the invoice numbers that ended in a return
retail_filtered <- retail_filtered %>%
filter(InvoiceNo %notin% negative_sales$InvoiceNo, CustomerID == 12346)
# Chunk 4
library(BTYDplus)
retail_train_3 <- retail_filtered %>%
filter(InvoiceDate < "2011-03-01")
colnames(retail_train_3)[c(4,6)] <- c("date","cust")
customer_rdf_3 <- BTYDplus::elog2cbs(retail_train_3,
unit = 'days',
T.cal = max(retail_train_3$date),
T.tot = max(retail_train_3$date))
customer_rdf_3$sales_avg = customer_rdf_3$sales / (customer_rdf_3$x + 1)
bgnbd_rdf = customer_rdf_3
bgnbd_rdf$T.star = 273
params_bgnbd = BTYD::bgnbd.EstimateParameters(bgnbd_rdf)
bgnbd_rdf$predicted_bgnbd = BTYD::bgnbd.ConditionalExpectedTransactions(
params = params_bgnbd,
T.star = bgnbd_rdf$T.star,
x = bgnbd_rdf$x,
t.x = bgnbd_rdf$t.x,
T.cal = bgnbd_rdf$T.cal
)
bgnbd_rdf$predicted_clv = bgnbd_rdf$sales_avg * bgnbd_rdf$predicted_bgnbd
predictions_comparison <- bgnbd_rdf %>%
select(predicted_clv, cust)
colnames(predictions_comparison)[2] <- "CustomerID"
predictions_comparison$CustomerID <- as.double(predictions_comparison$CustomerID)
colnames(retail_train_3)[6] <- "CustomerID"
customers_3months <- retail_train_3 %>%
distinct(CustomerID)
predicted_vs_actual <- customer_clv %>%
filter(CustomerID %in% customers_3months$CustomerID) %>%
left_join(predictions_comparison, by = "CustomerID") %>%
mutate(difference = CLV - predicted_clv)
predicted_vs_actual
summarise(mean(abs(difference)))
predicted_vs_actual
# Chunk 1
library(tidyverse)
library(CLVTools)
library(tidymodels)
retail <- read_csv("retail_cleaned.csv")
rfm_scores <- read_csv("rfm_scores.csv")
#joining rfm scores with retail data
rfm_join <- rfm_scores %>%
select(value, CustomerID)
retail_filtered <- retail %>%
filter(!is.na(CustomerID)) %>%
left_join(rfm_join, by = "CustomerID") %>%
select(-X1)
# Chunk 2
#calculating CLV of customers
customer_clv <- retail_filtered %>%
group_by(CustomerID) %>%
summarise(CLV = sum(sales))
# Chunk 3
negative_sales <- retail_filtered %>%
filter(sales < 0) %>%
select(InvoiceNo)
`%notin%` <- Negate(`%in%`)
#getting rid of all the invoice numbers that ended in a return
retail_filtered <- retail_filtered %>%
filter(InvoiceNo %notin% negative_sales$InvoiceNo, CustomerID != 12346)
# Chunk 4
library(BTYDplus)
retail_train_3 <- retail_filtered %>%
filter(InvoiceDate < "2011-03-01")
colnames(retail_train_3)[c(4,6)] <- c("date","cust")
customer_rdf_3 <- BTYDplus::elog2cbs(retail_train_3,
unit = 'days',
T.cal = max(retail_train_3$date),
T.tot = max(retail_train_3$date))
customer_rdf_3$sales_avg = customer_rdf_3$sales / (customer_rdf_3$x + 1)
bgnbd_rdf = customer_rdf_3
bgnbd_rdf$T.star = 273
params_bgnbd = BTYD::bgnbd.EstimateParameters(bgnbd_rdf)
bgnbd_rdf$predicted_bgnbd = BTYD::bgnbd.ConditionalExpectedTransactions(
params = params_bgnbd,
T.star = bgnbd_rdf$T.star,
x = bgnbd_rdf$x,
t.x = bgnbd_rdf$t.x,
T.cal = bgnbd_rdf$T.cal
)
bgnbd_rdf$predicted_clv = bgnbd_rdf$sales_avg * bgnbd_rdf$predicted_bgnbd
predictions_comparison <- bgnbd_rdf %>%
select(predicted_clv, cust)
colnames(predictions_comparison)[2] <- "CustomerID"
predictions_comparison$CustomerID <- as.double(predictions_comparison$CustomerID)
colnames(retail_train_3)[6] <- "CustomerID"
customers_3months <- retail_train_3 %>%
distinct(CustomerID)
predicted_vs_actual <- customer_clv %>%
filter(CustomerID %in% customers_3months$CustomerID) %>%
left_join(predictions_comparison, by = "CustomerID") %>%
mutate(difference = CLV - predicted_clv)
predicted_vs_actual %>%
summarise(mean(abs(difference)))
predicted_vs_actual %>%
ggplot(aes(difference)) +
geom_histogram() +
scale_x_log10()
predicted_vs_actual %>%
summarise(mean(abs(difference)))
predicted_vs_actual %>%
ggplot(aes(difference)) +
geom_density()
predicted_vs_actual %>%
ggplot(aes(difference)) +
geom_density() +
scale_x_log10
predicted_vs_actual %>%
ggplot(aes(difference)) +
geom_density() +
scale_x_log10()
predicted_vs_actual
predicted_vs_actual %>%
pivot_longer(CLV:predicted_clv)
predicted_vs_actual %>%
pivot_longer(CLV:predicted_clv) %>%
ggplot(aes(value, color = name)) +
geom_density()
predicted_vs_actual %>%
pivot_longer(CLV:predicted_clv) %>%
ggplot(aes(value, color = name)) +
geom_density() +
scale_x_log10()
predicted_vs_actual %>%
pivot_longer(CLV:predicted_clv) %>%
ggplot(aes(value, color = name)) +
geom_density() +
scale_x_log10() +
labs(title = "Density Curve of predicted vs actual")
head(retail_filtered)
colnames(retail_filtered)[c(4,6)] <- c("date","cust")
retail_filtered
head(retail_filtered)
colnames(retail_filtered)[c(4,6)] <- c("date","cust")
customer_rdf <- BTYDplus::elog2cbs(retail_filtered,
unit = 'days',
T.cal = max(retail_train$date),
T.tot = max(retail_train$date))
customer_rdf_3$sales_avg = customer_rdf$sales / (customer_rdf$x + 1)
bgnbd_rdf = customer_rdf
bgnbd_rdf$T.star = 365
params_bgnbd = BTYD::bgnbd.EstimateParameters(bgnbd_rdf)
bgnbd_rdf$predicted_bgnbd = BTYD::bgnbd.ConditionalExpectedTransactions(
params = params_bgnbd,
T.star = bgnbd_rdf$T.star,
x = bgnbd_rdf$x,
t.x = bgnbd_rdf$t.x,
T.cal = bgnbd_rdf$T.cal
)
bgnbd_rdf$predicted_clv = bgnbd_rdf$sales_avg * bgnbd_rdf$predicted_bgnbd
customer_rdf <- BTYDplus::elog2cbs(retail_filtered,
unit = 'days',
T.cal = max(retail_train$date),
T.tot = max(retail_train$date))
head(retail_filtered)
colnames(retail_filtered)[c(4,6)] <- c("date","cust")
customer_rdf_1year <- BTYDplus::elog2cbs(retail_filtered,
unit = 'days',
T.cal = max(retail_filtered$date),
T.tot = max(retail_filtered$date))
customer_rdf_1year$sales_avg = customer_rdf_1year$sales / (customer_rdf_1year$x + 1)
bgnbd_rdf = customer_rdf_1year
bgnbd_rdf$T.star = 365
params_bgnbd = BTYD::bgnbd.EstimateParameters(bgnbd_rdf)
bgnbd_rdf$predicted_bgnbd = BTYD::bgnbd.ConditionalExpectedTransactions(
params = params_bgnbd,
T.star = bgnbd_rdf$T.star,
x = bgnbd_rdf$x,
t.x = bgnbd_rdf$t.x,
T.cal = bgnbd_rdf$T.cal
)
bgnbd_rdf$predicted_clv = bgnbd_rdf$sales_avg * bgnbd_rdf$predicted_bgnbd
bgnbd_rdf$predicted_clv
bgnbd_rdf
head(bgnbd_rdf$predicted_clv)
#these are our 1 year later predictions
head(bgnbd_rdf)
colnames(bgnbd_rdf)[1] <- "CustomerID"
bgnbd_rdf_predicted1year <- bgnbd_rdf %>%
select(CustomerID, predicted_clv)
#joining it with our original dataset
retail_filtered %>%
left_join(bgnbd_rdf_predicted1year, by = "CustomerID")
bgnbd_rdf_predicted1year
retail_filtered
head(retail_filtered)
colnames(retail_filtered)[c(4,6)] <- c("date","cust")
customer_rdf_1year <- BTYDplus::elog2cbs(retail_filtered,
unit = 'days',
T.cal = max(retail_filtered$date),
T.tot = max(retail_filtered$date))
customer_rdf_1year$sales_avg = customer_rdf_1year$sales / (customer_rdf_1year$x + 1)
bgnbd_rdf = customer_rdf_1year
bgnbd_rdf$T.star = 365
params_bgnbd = BTYD::bgnbd.EstimateParameters(bgnbd_rdf)
bgnbd_rdf$predicted_bgnbd = BTYD::bgnbd.ConditionalExpectedTransactions(
params = params_bgnbd,
T.star = bgnbd_rdf$T.star,
x = bgnbd_rdf$x,
t.x = bgnbd_rdf$t.x,
T.cal = bgnbd_rdf$T.cal
)
bgnbd_rdf$predicted_clv = bgnbd_rdf$sales_avg * bgnbd_rdf$predicted_bgnbd
head(bgnbd_rdf)
bgnbd_rdf_predicted1year <- bgnbd_rdf %>%
select(cust, predicted_1yr_clv = predicted_clv)
#joining it with our original dataset
retail_filtered %>%
left_join(bgnbd_rdf_predicted1year, by = "cust")
customer_rdf_3year <- BTYDplus::elog2cbs(retail_filtered,
unit = 'days',
T.cal = max(retail_filtered$date),
T.tot = max(retail_filtered$date))
customer_rdf_3year$sales_avg = customer_rdf_3year$sales / (customer_rdf_3year$x + 1)
bgnbd_rdf = customer_rdf_3year
bgnbd_rdf$T.star = 1095
params_bgnbd = BTYD::bgnbd.EstimateParameters(bgnbd_rdf)
bgnbd_rdf$predicted_bgnbd = BTYD::bgnbd.ConditionalExpectedTransactions(
params = params_bgnbd,
T.star = bgnbd_rdf$T.star,
x = bgnbd_rdf$x,
t.x = bgnbd_rdf$t.x,
T.cal = bgnbd_rdf$T.cal
)
bgnbd_rdf$predicted_clv = bgnbd_rdf$sales_avg * bgnbd_rdf$predicted_bgnbd
head(bgnbd_rdf)
bgnbd_rdf_predicted3year <- bgnbd_rdf %>%
select(cust, predicted_3yr_clv = predicted_clv)
#joining it with our original dataset
retail_filtered %>%
left_join(bgnbd_rdf_predicted3year, by = "cust")
#joining it with our original dataset
retail_predicted_clv <- retail_filtered %>%
left_join(bgnbd_rdf_predicted1year, by = "cust")
#joining it with our original dataset
retail_predicted_clv <- retail_predicted_clv %>%
left_join(bgnbd_rdf_predicted3year, by = "cust")
retail_predicted_clv
retail_predicted_clv
predicted_vs_actual %>%
pivot_longer(CLV:predicted_clv) %>%
ggplot(aes(value, color = name)) +
geom_density() +
scale_x_log10() +
labs(title = "Density Curve of predicted vs actual")
retail_predicted_clv %>%
distinct(cust,predicted_1yr_clv,predicted_3yr_clv)
retail_predicted_clv %>%
distinct(cust,predicted_1yr_clv,predicted_3yr_clv) %>%
pivot_longer(predicted_1yr_clv:predicted_3yr_clv)
retail_predicted_clv %>%
distinct(cust,predicted_1yr_clv,predicted_3yr_clv) %>%
pivot_longer(predicted_1yr_clv:predicted_3yr_clv) %>%
ggplot(aes(value, color = name)) +
geom_density()
retail_predicted_clv %>%
distinct(cust,predicted_1yr_clv,predicted_3yr_clv) %>%
pivot_longer(predicted_1yr_clv:predicted_3yr_clv) %>%
ggplot(aes(value, color = name)) +
geom_density() +
scale_x_log10()
retail_predicted_clv %>%
distinct(cust,predicted_1yr_clv,predicted_3yr_clv) %>%
pivot_longer(predicted_1yr_clv:predicted_3yr_clv) %>%
ggplot(aes(value, color = name)) +
geom_density() +
scale_x_log10() +
labs(title = "Density of 1 year predicted clv and 3 year predicted clv")
retail_predicted_clv
retail_predicted_clv %>%
distinct(cust,value, predicted_1yr_clv)
retail_predicted_clv %>%
distinct(cust,value, predicted_1yr_clv) %>%
group_by(value) %>%
summarise(average_1yr_clv = mean(predicted_1yr_clv))
retail_predicted_clv %>%
distinct(cust,value, predicted_1yr_clv) %>%
group_by(value) %>%
summarise(average_1yr_clv = mean(predicted_1yr_clv)) %>%
mutate(value = fct_reorder(value, average_1yr_clv)) %>%
ungroup() %>%
ggplot(aes(value, average_1yr_clv)) +
geom_col()
retail_predicted_clv %>%
distinct(cust,value, predicted_1yr_clv) %>%
group_by(value) %>%
summarise(average_1yr_clv = mean(predicted_1yr_clv)) %>%
mutate(value = fct_reorder(value, average_1yr_clv)) %>%
ungroup() %>%
ggplot(aes(value, average_1yr_clv)) +
geom_point()
retail_predicted_clv %>%
distinct(cust,value, predicted_1yr_clv) %>%
group_by(value) %>%
summarise(average_1yr_clv = mean(predicted_1yr_clv),
count = n()) %>%
mutate(value = fct_reorder(value, average_1yr_clv)) %>%
ungroup() %>%
ggplot(aes(value, average_1yr_clv, size= count)) +
geom_point()
retail_predicted_clv %>%
distinct(cust,value, predicted_1yr_clv) %>%
group_by(value) %>%
summarise(average_1yr_clv = mean(predicted_1yr_clv),
count = n()) %>%
mutate(value = fct_reorder(value, average_1yr_clv)) %>%
ungroup() %>%
ggplot(aes(value, average_1yr_clv, size= count)) +
geom_point() +
geom_line()
retail_predicted_clv %>%
distinct(cust,value, predicted_1yr_clv) %>%
group_by(value) %>%
summarise(average_1yr_clv = mean(predicted_1yr_clv),
count = n()) %>%
mutate(value = fct_reorder(value, average_1yr_clv)) %>%
ungroup() %>%
ggplot(aes(value, average_1yr_clv, size= count)) +
geom_point()
retail_predicted_clv %>%
distinct(cust,value, predicted_1yr_clv) %>%
group_by(value) %>%
summarise(average_1yr_clv = mean(predicted_1yr_clv),
count = n()) %>%
mutate(value = fct_reorder(value, average_1yr_clv)) %>%
ungroup() %>%
ggplot(aes(value, average_1yr_clv, size= count)) +
geom_point() +
labs(title = "Relationship between RFM value and predicted 1 year CLV", y = "Average 1 year CLV")
retail_predicted_clv %>%
distinct(cust,value, predicted_3yr_clv) %>%
group_by(value) %>%
summarise(average_3yr_clv = mean(predicted_3yr_clv),
count = n()) %>%
mutate(value = fct_reorder(value, average_3yr_clv)) %>%
ungroup() %>%
ggplot(aes(value, average_3yr_clv, size= count)) +
geom_point() +
labs(title = "Relationship between RFM value and predicted 3 year CLV", y = "Average 3 year CLV")
